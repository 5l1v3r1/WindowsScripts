// This MOF File will trigger a command line template every time a filter catches something.
// The filter here will look for a process with a certain name to StartFilterProcess
// Some generic payload.bat file is listed as the consumer


// define the namespace that this subscription should live in. This is a popular spot
#pragma namespace ("\\\\.\\root\\subscription")

// Define a Command Line Event as the Consumer. This will fire off the command of my choosing every time the Event Filter catches something
instance of CommandLineEventConsumer as $ConsStart
{
	Name = "ProcExpStart";
	CommandLineTemplate = "{c:\\windows\\system32\\payload.bat}";
	
};

// Event Filter that looks for a process that contains 'procexp'
// This can be used to look for process that have started.
// So, if you want to kill a program every time it starts up, this could be a way to do that
instance of __EventFilter as $FiltStart
{
	Name = "StartFilterProcess";
	Query = "SELECT * FROM Win32_ProcessTrace WHERE ProcessName LIKE \"%procexp%\"";
	QueryLanguage = "WQL";
	EventNameSpace = "root\\cimv2";
	
};

// Bind the above Consumer and Filter so Windows knows what to Fire off when the Filter catches something
instance of __FilterToConsumerBinding 
{
	Filter = $FiltStart;
	Consumer = $ConsStart;
};